name: Release Docker Images

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+.[a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9][a-fA-F0-9]'

jobs:
  create-release:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      id-token: write
      contents: write
      attestations: write
    outputs:
      imageVersion: "${{ env.SEMVER_VERSION }}.${{ env.SHORT_COMMIT_HASH }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Store semver version from POM
        run: echo "SEMVER_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout | cut -d '-' -f 1)" >> $GITHUB_ENV

      - name: Store short commit hash
        run: echo "SHORT_COMMIT_HASH=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

      - name: Assert semver version matches version in pom
        run: |
          semver_version_from_tag=$(echo ${{ github.ref_name }} | cut -d "." -f 1-3)
          if [[ "$semver_version_from_tag" != ${{ env.SEMVER_VERSION }} ]]; then
            echo "Warning: Canceling workflow because semver version from tag didn't match semver version in pom"
            exit 1
          fi

      - name: Assert short commit hash is correct
        run: |
          hash_from_tag=$(echo ${{ github.ref_name }} | cut -d "." -f 4)
          if [[ "$hash_from_tag" != ${{ env.SHORT_COMMIT_HASH }} ]]; then
            echo "Warning: Canceling workflow because short commit hash from tag didn't match short commit hash of tagged commit"
            exit 1
          fi

      - name: Build and test jar
        run: mvn clean package

      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ env.SEMVER_VERSION }}.${{ env.SHORT_COMMIT_HASH }}
        run: gh release create ${{ env.RELEASE_TAG }} --title ${{ github.event.repository.name }} --verify-tag

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push application Docker image
        id: push-app
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.SEMVER_VERSION }}.${{ env.SHORT_COMMIT_HASH }}

      - name: Build and push Shibboleth SP Docker image
        id: push-shibboleth-sp
        uses: docker/build-push-action@v6
        with:
            context: ./shibboleth
            push: true
            tags: ghcr.io/${{ github.repository }}-shibboleth-sp:${{ env.SEMVER_VERSION }}.${{ env.SHORT_COMMIT_HASH }}

      - name: Generate artifact attestation for application
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push-app.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for Shibboleth SP
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}-shibboleth-sp
          subject-digest: ${{ steps.push-shibboleth-sp.outputs.digest }}
          push-to-registry: true

  generate-and-push-sboms:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Generate SBOM for maven dependencies
        run: mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom

      - name: Generate SBOM for application Docker image
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/puzzle/unilu-pruefungsabfrage:${{ needs.create-release.outputs.imageVersion }}
          output-file: application-sbom.xml
          format: cyclonedx
          upload-artifact: false

      - name: Generate SBOM for Shibboleth SP Docker image
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/puzzle/unilu-pruefungsabfrage-shibboleth-sp:${{ needs.create-release.outputs.imageVersion }}
          output-file: shibboleth-sp-sbom.xml
          format: cyclonedx
          upload-artifact: false

      - name: Install cyclonedx-cli
        uses: sigoden/install-binary@v1
        with:
          repo: CycloneDX/cyclonedx-cli
          tag: v0.27.1
          name: cyclonedx-linux-x64

      - name: Merge SBOMs
        run: cyclonedx-linux-x64 merge --input-files application-sbom.xml shibboleth-sp-sbom.xml target/bom.xml --output-file sbom.xml

      - name: Get semver version from pom and store major and minor version as deptrack version
        run: echo "DEPTRACK_PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout | cut -d '-' -f 1 | cut -d '.' -f 1-2).x" >> $GITHUB_ENV

      - name: Push application SBOM to dependency track
        env:
          PROJECT_NAME: unilu-pruefungsabfrage-public
        run: |
          curl --verbose -s --location --request POST ${{ secrets.DEPENDENCY_TRACK_URL }} \
          --header "X-Api-Key: ${{ secrets.OWASP_DT_KEY }}" \
          --header "Content-Type: multipart/form-data" \
          --form "autoCreate=true" \
          --form "projectName=${PROJECT_NAME:-$GITHUB_REPOSITORY}" \
          --form "projectVersion=${{ env.DEPTRACK_PROJECT_VERSION }}" \
          --form "bom=@sbom.xml"