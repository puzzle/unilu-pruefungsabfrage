services:
  spring:
    container_name: spring
    tty: true
    image: maven:3.9.9-amazoncorretto-21
    command: mvn -Dspring.profiles.active=dev spring-boot:run
    working_dir: /app-root/
    network_mode: host
    environment:
      RESOURCE_DIR: ./static
      SPRING_THYMELEAF_PREFIX: file:src/main/resources/templates/
      SPRING_THYMELEAF_CACHE: false
      SPRING_WEB_RESOURCES_STATIC_LOCATIONS: file:src/main/resources/static/
      SPRING_WEB_RESOURCES_CACHE_PERIOD: 0
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./:/app-root/
      - ~/.m2/repository:/root/.m2/repository

  shibboleth-service-provider:
    build:
      context: ./shibboleth
      dockerfile: Dockerfile
      args:
        - NODE_ENV=test
    image: shibboleth-sp
    container_name: unilu-pruefungsabfrage-shibboleth-sp
    hostname: shibboleth-sp
    network_mode: host
    environment:
      LOG_LEVEL: warn
    volumes:
      - type: bind
        source: ./shibboleth/secrets/test/httpd.crt.pem
        target: /etc/pki/tls/certs/httpd.crt.pem
        read_only: true
      - type: bind
        source: ./shibboleth/secrets/test/httpd.key.pem
        target: /etc/pki/tls/private/httpd.key.pem
        read_only: true
      - type: bind
        source: ./shibboleth/secrets/test/sp.crt.pem
        target: /etc/shibboleth/sp.crt.pem
        read_only: true
      - type: bind
        source: ./shibboleth/secrets/test/sp.key.pem
        target: /etc/shibboleth/sp.key.pem
        read_only: true
      - type: bind
        source: ./shibboleth/secrets/SWITCHaaiRootCA.crt.pem
        target: /etc/shibboleth/SWITCHaaiRootCA.crt.pem
        read_only: true

  maven:
    container_name: maven
    image: maven:3.9.9-amazoncorretto-21
    command: mvn fizzed-watcher:run
    working_dir: /app-root/
    volumes:
      - ./:/app-root/
      - ~/.m2/repository:/root/.m2/repository

  zap:
    container_name: zap
    tty: true
    image: ghcr.io/zaproxy/zaproxy:stable
    command: zap-baseline.py -t http://spring:8080 -c "rule-config.tsv" -r zap-report.html -z "-configfile /zap/wrk/options.conf"
    working_dir: /zap
    profiles:
      - zap
    depends_on:
      spring:
        condition: service_healthy
    volumes:
      - ./zap:/zap/wrk/:rw